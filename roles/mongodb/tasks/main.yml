---

 # pymongo will help creating users and roles with MongoDB (it's required package for Ansible module mongodb_user
  - name: Install required tools for Ansible
    yum:
      name: "{{ item }}"
      state: latest
    with_items:
      - libselinux-python
      - epel-release
    tags: [mongodb]

  - name: Install pip command
    yum:
      name: python2-pip
      state: latest
    tags: [mongodb]

  - name: Install PyMongo
    pip:
      name: pymongo
      state: latest
    tags: [mongodb]

  # Check if MongoDB is installed or not and if it should be updated or not
  - name: Check if MongoDB is installed
    command: mongod --version warn=no
    register: mongodb_is_installed_test
    ignore_errors: yes
    changed_when: false
    tags: [mongodb]

  - set_fact:
      mongodb_is_installed: true
    when: mongodb_is_installed_test.rc != 2
    tags: [mongodb]

  - set_fact:
      mongodb_is_installed: false
      mongodb_install_new_version: true
    when: mongodb_is_installed_test.rc == 2
    tags: [mongodb]

  - set_fact:
      mongodb_install_new_version: true
    when: ( mongodb_is_installed == true ) and ( mongodb_is_installed_test.stdout_lines[0] | replace('db version v','') != mongodb_version )
    tags: [mongodb]

  - set_fact:
      mongodb_install_new_version: false
    when: ( mongodb_is_installed == true ) and ( mongodb_is_installed_test.stdout_lines[0] | replace('db version v','') == mongodb_version )
    tags: [mongodb]



  # Install/Update MongoDB to desired version
  # These tasks will be executed when
  #  1. MongoDB is not installed
  #  2. MongoDB is installed but not in desired version
  #
  - include: install.yml
    when: "mongodb_install_new_version == true"
  
  - name: Start and enable MongoDB service
    service:
      name: mongod
      state: started
      enabled: yes
    tags: [mongodb, healthcheck]

  - name: Check MongoDB is running
    action: service name=mongod state=running
    tags: [mongodb, healthcheck]